% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main.R
\name{jwglm}
\alias{jwglm}
\title{Implementing a binary regression estimation.}
\usage{
jwglm(
  formula,
  data,
  beta0 = FALSE,
  link = "Logit",
  bBias = FALSE,
  nIter = 100,
  lr = 0.01,
  crit = 0.001,
  bDisp = FALSE
)
}
\arguments{
\item{formula}{a description of the model to be fitted.}

\item{data}{a data frame that contains the response variable and predictors.}

\item{beta0}{an initial value for beta to be estimated. The default is Null..}

\item{link}{a link function. It should be Logit, Probit, or LogLog.}

\item{bBias}{a logical value for the bias reduction. The default is FALSE}

\item{nIter}{the number of the iterations for the gradient decent method to find the MD estimator. The default value is 100.}

\item{lr}{the learning rate for the gradient descent method. The default value is 0.01.}

\item{crit}{the criterion used for exiting the iteration of the gradient descent method. The default value is 1e-3.}

\item{bDisp}{a logical value for displaying the iteration.  The default value is FALSE.}
}
\value{
A list of the following values:
\describe{
\item{Iter_Num}{ the number of iterations taken to complete the estimation. If it is less than nIter, the convergence was made within the given iterations.}

\item{diff}{the difference between the final estimators and the estimator of the previous stage, which shows the convergence status. If Iter_Num is less than nIter, then diff should be smaller than crit.}

\item{beta_MDE}{the MD estimator.}

\item{LossVec}{ a vector of values of the loss function at the estimator over the iterations.}

\item{fitted_values}{ a vector of fitted values obtained using the link function and the MD estimator.}

\item{residual}{ a vector of residuals, which is equal to the response substracted from fitted_values.}

}
}
\description{
Performs L2-type optimization
}
\examples{
####################
n=20
beta = c(1,-2,3.5)
p=3

###### Generate a data frame including a response and design matrix
X = matrix(0, n,p)
for(i in 1:p){
 X[,i] = runif(n, -2, 2)
}
pVec = 1/( 1+exp(-X\%*\%beta) )
Y = rbinom(n, 1, pVec)
DM = cbind(Y,X)
colnames(DM) = c("Y", paste("X", 1:p, sep=""))
DM = data.frame(DM)

link = "Logit"
lst = jwglm("Y~X1+X2+X3", data=DM, nIter=1000)

}
